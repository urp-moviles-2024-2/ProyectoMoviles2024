name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Ajusta según tu versión de Node.js
      - name: Install dependencies
        run: npm install

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run unit tests
        run: npm test -- --coverage
      - name: Upload coverage to SonarCloud
        run: |
          sonar-scanner -Dsonar.projectKey=YOUR_PROJECT_KEY
          # Configura tu clave de proyecto en SonarCloud

  static_code_analysis:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run static code analysis
        run: |
          npm install -g eslint
          eslint . --ext .js,.jsx,.ts,.tsx
        # Puedes integrar un plugin de Sonar para análisis estático de seguridad si es necesario

  deploy:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Deploy to Expo
        run: |
          npm install -g expo-cli
          expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
          expo publish
        # Asegúrate de añadir tus credenciales de Expo en GitHub Secrets

  notifications:
    runs-on: ubuntu-latest
    needs: [install_dependencies, run_tests, static_code_analysis, deploy]
    steps:
      - name: Notify success
        run: |
          if [[ ${{ job.status }} == "success" ]]; then
            echo "Deployment successful!"
            # Aquí puedes añadir notificaciones por email, Slack, etc.
          else
            echo "Deployment failed!"
            # Agregar notificación de fallo
